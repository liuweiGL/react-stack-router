{"version":3,"file":"react-mobile-router.es.js","sources":["../../../node_modules/.pnpm/@babel+runtime@7.17.7/node_modules/@babel/runtime/helpers/esm/extends.js","../../../node_modules/.pnpm/history@5.3.0/node_modules/history/index.js","../src/context/LocationContext.tsx","../src/context/NavigationContext.tsx","../src/utils/component.ts","../src/utils/constants.ts","../src/utils/uid.ts","../src/utils/url.ts","../src/utils/diagnosis.ts","../src/core/route.ts","../src/core/history.ts","../src/utils/function.ts","../src/core/stack.ts","../src/hooks/useForceUpdate.ts","../src/hooks/useStack.ts","../src/hooks/useUnmount.ts","../src/hooks/useWatch.ts","../src/core/RouterPage.tsx","../src/core/Router.tsx","../src/hooks/useNavigation.ts","../src/utils/event.ts","../src/core/navigate.ts","../src/core/Navigator.tsx","../src/hooks/useRouter.ts","../src/hooks/useLocation.ts"],"sourcesContent":["export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import _extends from '@babel/runtime/helpers/esm/extends';\n\n/**\r\n * Actions represent the type of change to a location value.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#action\r\n */\nvar Action;\n\n(function (Action) {\n  /**\r\n   * A POP indicates a change to an arbitrary index in the history stack, such\r\n   * as a back or forward navigation. It does not describe the direction of the\r\n   * navigation, only that the current index changed.\r\n   *\r\n   * Note: This is the default action for newly created history objects.\r\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\r\n   * A PUSH indicates a new entry being added to the history stack, such as when\r\n   * a link is clicked and a new page loads. When this happens, all subsequent\r\n   * entries in the stack are lost.\r\n   */\n\n  Action[\"Push\"] = \"PUSH\";\n  /**\r\n   * A REPLACE indicates the entry at the current index in the history stack\r\n   * being replaced by a new one.\r\n   */\n\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\n\nvar readOnly = process.env.NODE_ENV !== \"production\" ? function (obj) {\n  return Object.freeze(obj);\n} : function (obj) {\n  return obj;\n};\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== 'undefined') console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nvar BeforeUnloadEventType = 'beforeunload';\nvar HashChangeEventType = 'hashchange';\nvar PopStateEventType = 'popstate';\n/**\r\n * Browser history stores the location in regular URLs. This is the standard for\r\n * most web apps, but it requires some configuration on the server to ensure you\r\n * serve the same app at multiple URLs.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\r\n */\n\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$window = _options.window,\n      window = _options$window === void 0 ? document.defaultView : _options$window;\n  var globalHistory = window.history;\n\n  function getIndexAndLocation() {\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var state = globalHistory.state || {};\n    return [state.idx, readOnly({\n      pathname: pathname,\n      search: search,\n      hash: hash,\n      state: state.usr || null,\n      key: state.key || 'default'\n    })];\n  }\n\n  var blockedPopTx = null;\n\n  function handlePop() {\n    if (blockedPopTx) {\n      blockers.call(blockedPopTx);\n      blockedPopTx = null;\n    } else {\n      var nextAction = Action.Pop;\n\n      var _getIndexAndLocation = getIndexAndLocation(),\n          nextIndex = _getIndexAndLocation[0],\n          nextLocation = _getIndexAndLocation[1];\n\n      if (blockers.length) {\n        if (nextIndex != null) {\n          var delta = index - nextIndex;\n\n          if (delta) {\n            // Revert the POP\n            blockedPopTx = {\n              action: nextAction,\n              location: nextLocation,\n              retry: function retry() {\n                go(delta * -1);\n              }\n            };\n            go(delta);\n          }\n        } else {\n          // Trying to POP to a location with no index. We did not create\n          // this location, so we can't effectively block the navigation.\n          process.env.NODE_ENV !== \"production\" ? warning(false, // TODO: Write up a doc that explains our blocking strategy in\n          // detail and link to it here so people can understand better what\n          // is going on and how to avoid it.\n          \"You are trying to block a POP navigation to a location that was not \" + \"created by the history library. The block will fail silently in \" + \"production, but in general you should do all navigation with the \" + \"history library (instead of using window.history.pushState directly) \" + \"to avoid this situation.\") : void 0;\n        }\n      } else {\n        applyTx(nextAction);\n      }\n    }\n  }\n\n  window.addEventListener(PopStateEventType, handlePop);\n  var action = Action.Pop;\n\n  var _getIndexAndLocation2 = getIndexAndLocation(),\n      index = _getIndexAndLocation2[0],\n      location = _getIndexAndLocation2[1];\n\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), '');\n  }\n\n  function createHref(to) {\n    return typeof to === 'string' ? to : createPath(to);\n  } // state defaults to `null` because `window.history.state` does\n\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      hash: '',\n      search: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function getHistoryStateAndUrl(nextLocation, index) {\n    return [{\n      usr: nextLocation.state,\n      key: nextLocation.key,\n      idx: index\n    }, createHref(nextLocation)];\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction) {\n    action = nextAction;\n\n    var _getIndexAndLocation3 = getIndexAndLocation();\n\n    index = _getIndexAndLocation3[0];\n    location = _getIndexAndLocation3[1];\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr = getHistoryStateAndUrl(nextLocation, index + 1),\n          historyState = _getHistoryStateAndUr[0],\n          url = _getHistoryStateAndUr[1]; // TODO: Support forced reloading\n      // try...catch because iOS limits us to 100 pushState calls :/\n\n\n      try {\n        globalHistory.pushState(historyState, '', url);\n      } catch (error) {\n        // They are going to lose state here, but there is no real\n        // way to warn them about it since the page will refresh...\n        window.location.assign(url);\n      }\n\n      applyTx(nextAction);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr2 = getHistoryStateAndUrl(nextLocation, index),\n          historyState = _getHistoryStateAndUr2[0],\n          url = _getHistoryStateAndUr2[1]; // TODO: Support forced reloading\n\n\n      globalHistory.replaceState(historyState, '', url);\n      applyTx(nextAction);\n    }\n  }\n\n  function go(delta) {\n    globalHistory.go(delta);\n  }\n\n  var history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      var unblock = blockers.push(blocker);\n\n      if (blockers.length === 1) {\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n      }\n\n      return function () {\n        unblock(); // Remove the beforeunload listener so the document may\n        // still be salvageable in the pagehide event.\n        // See https://html.spec.whatwg.org/#unloading-documents\n\n        if (!blockers.length) {\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n      };\n    }\n  };\n  return history;\n}\n/**\r\n * Hash history stores the location in window.location.hash. This makes it ideal\r\n * for situations where you don't want to send the location to the server for\r\n * some reason, either because you do cannot configure it or the URL space is\r\n * reserved for something else.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\r\n */\n\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options2 = options,\n      _options2$window = _options2.window,\n      window = _options2$window === void 0 ? document.defaultView : _options2$window;\n  var globalHistory = window.history;\n\n  function getIndexAndLocation() {\n    var _parsePath = parsePath(window.location.hash.substr(1)),\n        _parsePath$pathname = _parsePath.pathname,\n        pathname = _parsePath$pathname === void 0 ? '/' : _parsePath$pathname,\n        _parsePath$search = _parsePath.search,\n        search = _parsePath$search === void 0 ? '' : _parsePath$search,\n        _parsePath$hash = _parsePath.hash,\n        hash = _parsePath$hash === void 0 ? '' : _parsePath$hash;\n\n    var state = globalHistory.state || {};\n    return [state.idx, readOnly({\n      pathname: pathname,\n      search: search,\n      hash: hash,\n      state: state.usr || null,\n      key: state.key || 'default'\n    })];\n  }\n\n  var blockedPopTx = null;\n\n  function handlePop() {\n    if (blockedPopTx) {\n      blockers.call(blockedPopTx);\n      blockedPopTx = null;\n    } else {\n      var nextAction = Action.Pop;\n\n      var _getIndexAndLocation4 = getIndexAndLocation(),\n          nextIndex = _getIndexAndLocation4[0],\n          nextLocation = _getIndexAndLocation4[1];\n\n      if (blockers.length) {\n        if (nextIndex != null) {\n          var delta = index - nextIndex;\n\n          if (delta) {\n            // Revert the POP\n            blockedPopTx = {\n              action: nextAction,\n              location: nextLocation,\n              retry: function retry() {\n                go(delta * -1);\n              }\n            };\n            go(delta);\n          }\n        } else {\n          // Trying to POP to a location with no index. We did not create\n          // this location, so we can't effectively block the navigation.\n          process.env.NODE_ENV !== \"production\" ? warning(false, // TODO: Write up a doc that explains our blocking strategy in\n          // detail and link to it here so people can understand better\n          // what is going on and how to avoid it.\n          \"You are trying to block a POP navigation to a location that was not \" + \"created by the history library. The block will fail silently in \" + \"production, but in general you should do all navigation with the \" + \"history library (instead of using window.history.pushState directly) \" + \"to avoid this situation.\") : void 0;\n        }\n      } else {\n        applyTx(nextAction);\n      }\n    }\n  }\n\n  window.addEventListener(PopStateEventType, handlePop); // popstate does not fire on hashchange in IE 11 and old (trident) Edge\n  // https://developer.mozilla.org/de/docs/Web/API/Window/popstate_event\n\n  window.addEventListener(HashChangeEventType, function () {\n    var _getIndexAndLocation5 = getIndexAndLocation(),\n        nextLocation = _getIndexAndLocation5[1]; // Ignore extraneous hashchange events.\n\n\n    if (createPath(nextLocation) !== createPath(location)) {\n      handlePop();\n    }\n  });\n  var action = Action.Pop;\n\n  var _getIndexAndLocation6 = getIndexAndLocation(),\n      index = _getIndexAndLocation6[0],\n      location = _getIndexAndLocation6[1];\n\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), '');\n  }\n\n  function getBaseHref() {\n    var base = document.querySelector('base');\n    var href = '';\n\n    if (base && base.getAttribute('href')) {\n      var url = window.location.href;\n      var hashIndex = url.indexOf('#');\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href;\n  }\n\n  function createHref(to) {\n    return getBaseHref() + '#' + (typeof to === 'string' ? to : createPath(to));\n  }\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      hash: '',\n      search: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function getHistoryStateAndUrl(nextLocation, index) {\n    return [{\n      usr: nextLocation.state,\n      key: nextLocation.key,\n      idx: index\n    }, createHref(nextLocation)];\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction) {\n    action = nextAction;\n\n    var _getIndexAndLocation7 = getIndexAndLocation();\n\n    index = _getIndexAndLocation7[0];\n    location = _getIndexAndLocation7[1];\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(nextLocation.pathname.charAt(0) === '/', \"Relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr3 = getHistoryStateAndUrl(nextLocation, index + 1),\n          historyState = _getHistoryStateAndUr3[0],\n          url = _getHistoryStateAndUr3[1]; // TODO: Support forced reloading\n      // try...catch because iOS limits us to 100 pushState calls :/\n\n\n      try {\n        globalHistory.pushState(historyState, '', url);\n      } catch (error) {\n        // They are going to lose state here, but there is no real\n        // way to warn them about it since the page will refresh...\n        window.location.assign(url);\n      }\n\n      applyTx(nextAction);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(nextLocation.pathname.charAt(0) === '/', \"Relative pathnames are not supported in hash history.replace(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr4 = getHistoryStateAndUrl(nextLocation, index),\n          historyState = _getHistoryStateAndUr4[0],\n          url = _getHistoryStateAndUr4[1]; // TODO: Support forced reloading\n\n\n      globalHistory.replaceState(historyState, '', url);\n      applyTx(nextAction);\n    }\n  }\n\n  function go(delta) {\n    globalHistory.go(delta);\n  }\n\n  var history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      var unblock = blockers.push(blocker);\n\n      if (blockers.length === 1) {\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n      }\n\n      return function () {\n        unblock(); // Remove the beforeunload listener so the document may\n        // still be salvageable in the pagehide event.\n        // See https://html.spec.whatwg.org/#unloading-documents\n\n        if (!blockers.length) {\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n      };\n    }\n  };\n  return history;\n}\n/**\r\n * Memory history stores the current location in memory. It is designed for use\r\n * in stateful non-browser environments like tests and React Native.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#creatememoryhistory\r\n */\n\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options3 = options,\n      _options3$initialEntr = _options3.initialEntries,\n      initialEntries = _options3$initialEntr === void 0 ? ['/'] : _options3$initialEntr,\n      initialIndex = _options3.initialIndex;\n  var entries = initialEntries.map(function (entry) {\n    var location = readOnly(_extends({\n      pathname: '/',\n      search: '',\n      hash: '',\n      state: null,\n      key: createKey()\n    }, typeof entry === 'string' ? parsePath(entry) : entry));\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in createMemoryHistory({ initialEntries }) (invalid entry: \" + JSON.stringify(entry) + \")\") : void 0;\n    return location;\n  });\n  var index = clamp(initialIndex == null ? entries.length - 1 : initialIndex, 0, entries.length - 1);\n  var action = Action.Pop;\n  var location = entries[index];\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  function createHref(to) {\n    return typeof to === 'string' ? to : createPath(to);\n  }\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      search: '',\n      hash: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction, nextLocation) {\n    action = nextAction;\n    location = nextLocation;\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in memory history.push(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in memory history.replace(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      entries[index] = nextLocation;\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  function go(delta) {\n    var nextIndex = clamp(index + delta, 0, entries.length - 1);\n    var nextAction = Action.Pop;\n    var nextLocation = entries[nextIndex];\n\n    function retry() {\n      go(delta);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      index = nextIndex;\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  var history = {\n    get index() {\n      return index;\n    },\n\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      return blockers.push(blocker);\n    }\n  };\n  return history;\n} ////////////////////////////////////////////////////////////////////////////////\n// UTILS\n////////////////////////////////////////////////////////////////////////////////\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n\nfunction promptBeforeUnload(event) {\n  // Cancel the event.\n  event.preventDefault(); // Chrome (and legacy IE) requires returnValue to be set.\n\n  event.returnValue = '';\n}\n\nfunction createEvents() {\n  var handlers = [];\n  return {\n    get length() {\n      return handlers.length;\n    },\n\n    push: function push(fn) {\n      handlers.push(fn);\n      return function () {\n        handlers = handlers.filter(function (handler) {\n          return handler !== fn;\n        });\n      };\n    },\n    call: function call(arg) {\n      handlers.forEach(function (fn) {\n        return fn && fn(arg);\n      });\n    }\n  };\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\r\n * Creates a string URL path from the given pathname, search, and hash components.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createpath\r\n */\n\n\nfunction createPath(_ref) {\n  var _ref$pathname = _ref.pathname,\n      pathname = _ref$pathname === void 0 ? '/' : _ref$pathname,\n      _ref$search = _ref.search,\n      search = _ref$search === void 0 ? '' : _ref$search,\n      _ref$hash = _ref.hash,\n      hash = _ref$hash === void 0 ? '' : _ref$hash;\n  if (search && search !== '?') pathname += search.charAt(0) === '?' ? search : '?' + search;\n  if (hash && hash !== '#') pathname += hash.charAt(0) === '#' ? hash : '#' + hash;\n  return pathname;\n}\n/**\r\n * Parses a string URL path into its separate pathname, search, and hash components.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#parsepath\r\n */\n\nfunction parsePath(path) {\n  var parsedPath = {};\n\n  if (path) {\n    var hashIndex = path.indexOf('#');\n\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    var searchIndex = path.indexOf('?');\n\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport { Action, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, parsePath };\n//# sourceMappingURL=index.js.map\n","import { createContext, PropsWithChildren, ProviderProps } from 'react'\r\n\r\nimport { Location } from 'history'\r\n\r\ntype LocationContextState = {\r\n  location: Location\r\n}\r\n\r\nexport const LocationContext = createContext<LocationContextState>({} as any)\r\n\r\nexport const LocationProvider = (\r\n  props: ProviderProps<LocationContextState>\r\n) => {\r\n  return <LocationContext.Provider {...props} />\r\n}\r\n","import { createContext, ProviderProps } from 'react'\r\n\r\nimport { ProHistory } from '../core/history'\r\n\r\ntype NavigationContextState = {\r\n  navigator: ProHistory\r\n}\r\n\r\nexport const NavigationContext = createContext<NavigationContextState>(\r\n  {} as any\r\n)\r\n\r\nexport const NavigationProvider = (\r\n  props: ProviderProps<NavigationContextState>\r\n) => {\r\n  return <NavigationContext.Provider {...props} />\r\n}\r\n","import { LazyComponent } from 'src/core/route'\r\n\r\nexport const isClassComponent = (component: any) => {\r\n  return !!Object.getPrototypeOf(component)?.isReactComponent\r\n}\r\n\r\nconst importRegexp = /import\\s?\\(/\r\nexport const isLazyComponent = (component: any): component is LazyComponent => {\r\n  if (isClassComponent(component)) {\r\n    return false\r\n  }\r\n\r\n  const str = String(component).trim()\r\n\r\n  return str.startsWith('(') && str.includes('=>') && importRegexp.test(str)\r\n}\r\n\r\nexport const loadLazyComponent = async (component: () => Promise<any>) => {\r\n  const res = await component()\r\n\r\n  if (res && isESModule(res)) {\r\n    return res.default\r\n  }\r\n\r\n  return res\r\n}\r\n\r\nexport const isESModule = (obj: any): obj is { default: any } => {\r\n  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')\r\n}\r\n\r\nexport const hasSymbol =\r\n  typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol'\r\n","export const PAGE_KEY = '_pageKey'\r\n","let IDX = 36,\r\n  HEX = ''\r\nwhile (IDX--) HEX += IDX.toString(36)\r\n\r\nexport function uid(len?: number) {\r\n  let str = '',\r\n    num = len || 11\r\n  while (num--) str += HEX[(Math.random() * 36) | 0]\r\n  return str\r\n}\r\n","import { parsePath, Path } from 'history'\r\n\r\nimport { PAGE_KEY } from './constants'\r\nimport { uid } from './uid'\r\n\r\nexport const containBasename = (basename: string, pathname: string) => {\r\n  return pathname.toLowerCase().startsWith(basename.toLowerCase())\r\n}\r\n\r\nexport const stripBasename = (basename: string, pathname: string) => {\r\n  if (basename === '/') return pathname\r\n\r\n  if (!containBasename(basename, pathname)) {\r\n    return null\r\n  }\r\n\r\n  return pathname.slice(basename.length) || '/'\r\n}\r\n\r\nexport const joinPaths = (...paths: string[]) => {\r\n  return paths.join('/').replace(/\\/\\/+/g, '/')\r\n}\r\n\r\nexport const normalizePath = (pathname: string) => {\r\n  return pathname.replace(/\\/+$/, '').replace(/^\\/*/, '/')\r\n}\r\n\r\nexport const parseParams = (url?: string) => {\r\n  const result: Record<string, string> = {}\r\n\r\n  if (!url) {\r\n    return result\r\n  }\r\n\r\n  const { search } = parsePath(url)\r\n  const searchParams = new URLSearchParams(search)\r\n\r\n  for (const [key, value] of searchParams.entries()) {\r\n    result[key] = value\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport const stringifyParams = (params: Record<any, any>) => {\r\n  const searchParams = new URLSearchParams()\r\n\r\n  for (const [key, value] of Object.entries(params)) {\r\n    searchParams.append(key, value)\r\n  }\r\n\r\n  return searchParams.toString()\r\n}\r\n\r\nexport const getPageKey = ({ search }: Partial<Path>) => {\r\n  if (!search) {\r\n    return undefined\r\n  }\r\n\r\n  const params = parseParams(search)\r\n\r\n  const pageKey = params[PAGE_KEY]\r\n\r\n  return typeof pageKey === 'string' ? pageKey : undefined\r\n}\r\n\r\nexport const setPageKey = (location: Partial<Path>) => {\r\n  const params = parseParams(location.search)\r\n  const search = stringifyParams({\r\n    ...params,\r\n    [PAGE_KEY]: uid()\r\n  })\r\n\r\n  return {\r\n    ...location,\r\n    search\r\n  }\r\n}\r\n","/**\r\n * 为变量添加断言\r\n *\r\n * 注意：不要使用箭头函数声明\r\n * @see https://github.com/microsoft/TypeScript/issues/34523\r\n *  */\r\nexport function assert(cond: any, message: string): asserts cond {\r\n  if (!cond) throw new Error(message)\r\n}\r\n\r\nfunction log(method: 'warn' | 'error', cond: any, message: string): void {\r\n  if (cond) {\r\n    // eslint-disable-next-line no-console\r\n    if (typeof console !== 'undefined') console[method](message)\r\n\r\n    try {\r\n      // Welcome to debugging React Router!\r\n      //\r\n      // This error is thrown as a convenience so you can more easily\r\n      // find the source for a warning that appears in the console by\r\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\r\n      throw new Error(message)\r\n      // eslint-disable-next-line no-empty\r\n    } catch (e) {}\r\n  }\r\n}\r\n\r\nexport function warning(cond: any, message: string): void {\r\n  log('warn', cond, message)\r\n}\r\n\r\nexport function error(cond: any, message: string): void {\r\n  log('error', cond, message)\r\n}\r\n","import {\r\n  ComponentClass,\r\n  ComponentType,\r\n  FunctionComponent,\r\n  ReactNode\r\n} from 'react'\r\n\r\nimport { warning } from '../utils/diagnosis'\r\n\r\nexport type LazyComponent = () => Promise<{\r\n  default: ComponentType<any>\r\n}>\r\n\r\nexport type RouteComponent = FunctionComponent | ComponentClass | LazyComponent\r\n\r\ntype BaseRoute<Meta> = {\r\n  // 是否是首页\r\n  index?: boolean\r\n  // 唯一标识\r\n  name?: string\r\n  path: string\r\n  meta?: Meta\r\n}\r\n\r\nexport type PageRoute<Meta = any> = BaseRoute<Meta> & {\r\n  type?: 'page'\r\n}\r\n\r\nexport type TabRoute<Meta = any> = BaseRoute<Meta> & {\r\n  type: 'tab'\r\n  icon?: ReactNode\r\n}\r\n\r\nexport type RouteRaw<Meta = any> = PageRoute<Meta> | TabRoute<Meta>\r\n\r\nexport type Route<Meta = any> = RouteRaw<Meta> & {\r\n  component: RouteComponent\r\n}\r\n\r\nexport type RouteRecord<Meta = any> = RouteRaw<Meta> & {\r\n  component: Exclude<RouteComponent, LazyComponent>\r\n}\r\n\r\nexport const isTabRoute = (route: RouteRaw): route is TabRoute => {\r\n  return route.type === 'tab'\r\n}\r\n\r\nexport const isPageRoute = (route: RouteRaw): route is PageRoute => {\r\n  return route.type === undefined || route.type === 'page'\r\n}\r\n\r\nexport const isSameRoute = (route1: RouteRaw, route2: RouteRaw) => {\r\n  return route1.name === route2.name || route1.path === route2.path\r\n}\r\n\r\nexport const matchRoute = (routes: Route[], nameOrPath?: string) => {\r\n  let route: Route | undefined\r\n\r\n  if (nameOrPath) {\r\n    route = routes.find(\r\n      ({ name, path }) => name === nameOrPath || path === nameOrPath\r\n    )\r\n  }\r\n\r\n  warning(\r\n    !route,\r\n    `Can not find the route when name or path is  \\`${nameOrPath}\\` `\r\n  )\r\n\r\n  return route\r\n}\r\n","import { createPath, History, parsePath, Path, To, Update } from 'history'\r\n\r\nimport { isLazyComponent, loadLazyComponent } from '../utils/component'\r\nimport { Noop } from '../utils/function'\r\nimport {\r\n  getPageKey,\r\n  joinPaths,\r\n  normalizePath,\r\n  setPageKey,\r\n  stripBasename\r\n} from '../utils/url'\r\n\r\nimport { isTabRoute, matchRoute, Route, RouteRecord } from './route'\r\nimport { Stack } from './stack'\r\n\r\ntype ProState = {\r\n  blockerId: number\r\n}\r\n\r\nexport type ProTo =\r\n  | To\r\n  | {\r\n      name: string\r\n    }\r\n\r\nexport type ProUpdate = Update & {\r\n  route: RouteRecord\r\n}\r\n\r\nexport type ProListener = (options: ProUpdate) => void\r\n\r\nexport type ProBlocker = (options: ProUpdate) => boolean | undefined\r\n\r\nexport type HistoryProps = {\r\n  basename: string\r\n  history: History\r\n  routes: Route[]\r\n  stack: Stack\r\n}\r\n\r\nexport class ProHistory {\r\n  public basename: string\r\n  private history: History\r\n  private routes: Route[]\r\n  private stack: Stack\r\n\r\n  private routeRecordMap: Map<string, RouteRecord>\r\n  private blockerMap: Map<number, ProBlocker>\r\n\r\n  private listeners: ProListener[] = []\r\n  private unlisteners: Noop[] = []\r\n\r\n  constructor({ basename, history, routes, stack }: HistoryProps) {\r\n    this.basename = normalizePath(basename)\r\n    this.routes = routes\r\n    this.stack = stack\r\n    this.history = history\r\n    this.routeRecordMap = new Map()\r\n    this.blockerMap = new Map()\r\n\r\n    this.initSubscriber()\r\n    this.initWatcher()\r\n    this.loadIndexPage()\r\n  }\r\n\r\n  get location() {\r\n    return this.history.location\r\n  }\r\n\r\n  get currentRoute() {\r\n    return this.stack.current\r\n  }\r\n\r\n  get stackSnapshoot() {\r\n    return this.stack.items.slice()\r\n  }\r\n\r\n  private get indexRoute() {\r\n    return this.routes.find(item => item.index) || this.routes[0]\r\n  }\r\n\r\n  private async resolveRouteRecord(pathname: string) {\r\n    const route = matchRoute(this.routes, pathname)\r\n\r\n    if (!route) {\r\n      return\r\n    }\r\n\r\n    const { path, component } = route\r\n    if (this.routeRecordMap.has(path)) {\r\n      return this.routeRecordMap.get(path)\r\n    }\r\n\r\n    let routeRecord: RouteRecord\r\n\r\n    if (isLazyComponent(component)) {\r\n      const resolvedComponent = await loadLazyComponent(component)\r\n\r\n      if (!resolvedComponent) {\r\n        throw new Error(`Couldn't resolve component  at \"${path}\"`)\r\n      }\r\n\r\n      routeRecord = {\r\n        ...route,\r\n        component: resolvedComponent\r\n      }\r\n    } else {\r\n      routeRecord = {\r\n        ...route,\r\n        component\r\n      }\r\n    }\r\n\r\n    this.routeRecordMap.set(path, routeRecord)\r\n\r\n    return routeRecord\r\n  }\r\n\r\n  /**\r\n   * 包装 history 的 listen 事件，处理 basename\r\n   */\r\n  private initSubscriber() {\r\n    const unlistener = this.history.listen(async options => {\r\n      const {\r\n        location: { pathname, state }\r\n      } = options\r\n\r\n      const path = stripBasename(this.basename, pathname)\r\n\r\n      if (!path) {\r\n        return\r\n      }\r\n\r\n      const route = await this.resolveRouteRecord(path)\r\n\r\n      if (!route) {\r\n        return\r\n      }\r\n\r\n      const proOptions = {\r\n        ...options,\r\n        route\r\n      }\r\n\r\n      if (state) {\r\n        const { blockerId } = state as ProState\r\n\r\n        const blocker = this.blockerMap.get(blockerId)\r\n\r\n        if (blocker && blocker(proOptions) === false) {\r\n          this.blockerMap.delete(blockerId)\r\n          return\r\n        }\r\n      }\r\n\r\n      this.listeners.forEach(listen => {\r\n        listen(proOptions)\r\n      })\r\n    })\r\n\r\n    this.unlisteners.push(unlistener)\r\n  }\r\n\r\n  /**\r\n   * 当 history 变化时维护路由\r\n   */\r\n  private initWatcher() {\r\n    this.listen(({ route, location }) => {\r\n      const url = createPath(location)\r\n\r\n      const pageKey = getPageKey(location)\r\n\r\n      if (pageKey) {\r\n        const stackRoute = {\r\n          pageKey,\r\n          url,\r\n          ...route\r\n        }\r\n\r\n        if (isTabRoute(route)) {\r\n          this.stack.switchTab(stackRoute)\r\n        } else {\r\n          this.stack.jumpPage(stackRoute)\r\n        }\r\n      } else {\r\n        this.history.replace(setPageKey(location))\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 加载首页\r\n   */\r\n  private loadIndexPage() {\r\n    this.replace(this.indexRoute.path)\r\n  }\r\n\r\n  listen(listener: ProListener) {\r\n    this.listeners.push(listener)\r\n\r\n    const index = this.listeners.length - 1\r\n\r\n    return () => {\r\n      this.listeners.splice(index, 1)\r\n    }\r\n  }\r\n\r\n  private resolveTo(to: ProTo) {\r\n    let path: Partial<Path> | undefined\r\n\r\n    if (typeof to === 'string') {\r\n      path = parsePath(to)\r\n    } else if ('pathname' in to) {\r\n      path = to\r\n    } else if ('name' in to) {\r\n      const route = matchRoute(this.routes, to.name)\r\n\r\n      path = route\r\n        ? {\r\n            pathname: route.path\r\n          }\r\n        : undefined\r\n    }\r\n\r\n    if (path?.pathname) {\r\n      path.pathname = joinPaths(this.basename, path.pathname)\r\n      path = setPageKey(path)\r\n    }\r\n\r\n    return path\r\n  }\r\n\r\n  push(to: ProTo, blocker?: ProBlocker) {\r\n    const result = this.resolveTo(to)\r\n\r\n    if (result) {\r\n      let state\r\n      if (blocker) {\r\n        const blockerId = Date.now()\r\n        state = { blockerId }\r\n        this.blockerMap.set(blockerId, blocker)\r\n      }\r\n\r\n      this.history.push(result, state)\r\n    }\r\n  }\r\n\r\n  replace(to: ProTo) {\r\n    const result = this.resolveTo(to)\r\n\r\n    if (result) {\r\n      this.stack.pop()\r\n      this.history.replace(result)\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.stack.clear()\r\n  }\r\n\r\n  back(delta = 1) {\r\n    const prePage = this.stack.getLastItem(delta)\r\n\r\n    this.history.replace(prePage.url)\r\n  }\r\n\r\n  createHref(to: ProTo) {\r\n    const result = this.resolveTo(to)\r\n\r\n    if (result) {\r\n      return this.history.createHref(result)\r\n    }\r\n\r\n    return undefined\r\n  }\r\n\r\n  destroy() {\r\n    this.unlisteners.forEach(item => item())\r\n  }\r\n}\r\n","export type Noop = (...args: any[]) => any\r\n\r\nlet timer: any\r\nexport const debounce = (fn: Noop, wait: number) => {\r\n  if (timer) {\r\n    clearTimeout(timer)\r\n  }\r\n\r\n  timer = setTimeout(fn, wait)\r\n}\r\n","import { debounce } from '../utils/function'\r\n\r\nimport { isSameRoute, RouteRecord } from './route'\r\n\r\ntype Scheduler = () => void\r\n\r\nexport type StackRoute = RouteRecord & {\r\n  pageKey?: string\r\n\r\n  // 完整的地址，用于返回时恢复地址栏地址\r\n  url: string\r\n}\r\n\r\nconst createReactiveArray = (scheduler: Scheduler) => {\r\n  const initial: StackRoute[] = []\r\n\r\n  return new Proxy(initial, {\r\n    get(target, key: any) {\r\n      return target[key]\r\n    },\r\n    set(target, key: any, value) {\r\n      target[key] = value\r\n\r\n      debounce(scheduler, 50)\r\n\r\n      return true\r\n    }\r\n  })\r\n}\r\n\r\nexport class Stack {\r\n  private tabs: StackRoute[]\r\n  private pages: StackRoute[]\r\n\r\n  constructor(scheduler: Scheduler) {\r\n    this.tabs = createReactiveArray(scheduler)\r\n    this.pages = createReactiveArray(scheduler)\r\n  }\r\n\r\n  get current() {\r\n    return this.items[this.items.length - 1]\r\n  }\r\n\r\n  get items() {\r\n    return [...this.tabs, ...this.pages]\r\n  }\r\n\r\n  private containsTab(item: StackRoute) {\r\n    return this.tabs.some(tab => isSameRoute(tab, item))\r\n  }\r\n\r\n  private findPageIndex(item: StackRoute) {\r\n    if (!item.pageKey) {\r\n      return -1\r\n    }\r\n\r\n    return this.pages.findIndex(page => page.pageKey === item.pageKey)\r\n  }\r\n\r\n  /**\r\n   * 从右往左取值，下标从 0 开始\r\n   */\r\n  getLastItem(delta: number) {\r\n    return this.items[this.items.length - delta - 1]\r\n  }\r\n\r\n  switchTab(item: StackRoute) {\r\n    if (this.containsTab(item)) {\r\n      this.tabs.sort(tab => (isSameRoute(tab, item) ? -1 : 0))\r\n    } else {\r\n      this.tabs.push({ ...item })\r\n    }\r\n\r\n    this.clear()\r\n  }\r\n\r\n  jumpPage(item: StackRoute) {\r\n    const pageIndex = this.findPageIndex(item)\r\n\r\n    if (pageIndex > -1) {\r\n      this.pages.splice(pageIndex + 1, this.pages.length - pageIndex - 1)\r\n    } else {\r\n      this.pages.push({ ...item })\r\n    }\r\n  }\r\n\r\n  pop() {\r\n    this.pages.pop()\r\n  }\r\n\r\n  clear() {\r\n    this.pages.splice(0, this.pages.length)\r\n  }\r\n}\r\n","import { useCallback, useState } from 'react'\r\n\r\nexport const useForceUpdate = () => {\r\n  const [, setState] = useState({})\r\n\r\n  return useCallback(() => setState({}), [])\r\n}\r\n","import { useMemo } from 'react'\r\n\r\nimport { Stack } from '../core/stack'\r\n\r\nimport { useForceUpdate } from './useForceUpdate'\r\n\r\nexport const useStack = () => {\r\n  const scheduler = useForceUpdate()\r\n\r\n  return useMemo(() => new Stack(scheduler), [])\r\n}\r\n","import { useEffect } from 'react'\r\n\r\nexport const useUnmount = (cb: () => void) => {\r\n  useEffect(() => {\r\n    return cb\r\n  }, [])\r\n}\r\n","import { useEffect, useRef, useState } from 'react'\r\n\r\nimport { History } from 'history'\r\n\r\nimport { ProHistory } from '../core/history'\r\nimport { Route } from '../core/route'\r\n\r\nimport { useStack } from './useStack'\r\nimport { useUnmount } from './useUnmount'\r\n\r\nexport type UseHistoryProps = {\r\n  basename: string\r\n  history: History\r\n  routes: Route[]\r\n}\r\n\r\nexport const useWatch = ({ basename, history, routes }: UseHistoryProps) => {\r\n  const stack = useStack()\r\n\r\n  // 不要使用 useMemo 不然有可能导致多个 history 实例操作同一个 stack\r\n  const ref = useRef<ProHistory>()\r\n\r\n  if (!ref.current) {\r\n    ref.current = new ProHistory({ basename, history, routes, stack })\r\n  }\r\n\r\n  const proHistory = ref.current\r\n\r\n  const [location, setLocation] = useState(history.location)\r\n\r\n  useEffect(() => {\r\n    proHistory.listen(function c({ location }) {\r\n      setLocation(location)\r\n    })\r\n  }, [proHistory])\r\n\r\n  useUnmount(() => {\r\n    proHistory.destroy()\r\n  })\r\n\r\n  return {\r\n    location,\r\n    history: proHistory,\r\n    matches: stack.items\r\n  }\r\n}\r\n","import { CSSProperties, ReactNode } from 'react'\r\n\r\nexport type RouterPageProps = {\r\n  status: 'show' | 'hide'\r\n  children?: ReactNode\r\n}\r\n\r\nconst hideStyle: CSSProperties = {\r\n  display: 'none'\r\n}\r\n\r\nconst RouterPage = ({ status, children }: RouterPageProps) => {\r\n  return (\r\n    <div\r\n      children={children}\r\n      style={status === 'hide' ? hideStyle : undefined}\r\n    />\r\n  )\r\n}\r\n\r\nexport default RouterPage\r\n","import { useMemo } from 'react'\r\n\r\nimport { createBrowserHistory, createHashHistory, History } from 'history'\r\n\r\nimport { LocationProvider } from '../context/LocationContext'\r\nimport { NavigationProvider } from '../context/NavigationContext'\r\nimport { useWatch } from '../hooks/useWatch'\r\n\r\nimport { Route } from './route'\r\nimport RouterPage from './RouterPage'\r\nimport { StackRoute } from './stack'\r\n\r\nexport type RouterProps = {\r\n  basename?: string\r\n  history: History\r\n  routes: Route[]\r\n}\r\n\r\nconst renderRoutes = (routes: StackRoute[]) => {\r\n  return routes.map(({ pageKey, component: RouteComponent }, index) => {\r\n    const status = index === routes.length - 1 ? 'show' : 'hide'\r\n    return (\r\n      <RouterPage key={pageKey} status={status}>\r\n        <RouteComponent />\r\n      </RouterPage>\r\n    )\r\n  })\r\n}\r\n\r\nexport const Router = ({ basename = '/', history, routes }: RouterProps) => {\r\n  const {\r\n    matches,\r\n    location,\r\n    history: proHistory\r\n  } = useWatch({ basename, history, routes })\r\n\r\n  const children = renderRoutes(matches)\r\n\r\n  return (\r\n    <NavigationProvider value={{ navigator: proHistory }}>\r\n      <LocationProvider children={children} value={{ location }} />\r\n    </NavigationProvider>\r\n  )\r\n}\r\n\r\nexport type BrowserRouterProps = {\r\n  basename?: string\r\n  routes: Route[]\r\n}\r\n\r\nexport const BrowserRouter = ({ basename, routes }: BrowserRouterProps) => {\r\n  const history = useMemo(() => createBrowserHistory({ window }), [])\r\n\r\n  return <Router basename={basename} history={history} routes={routes} />\r\n}\r\n\r\nexport type HashRouterProps = BrowserRouterProps\r\n\r\nexport const HashRouter = ({ basename, routes }: HashRouterProps) => {\r\n  const history = useMemo(() => createHashHistory({ window }), [])\r\n\r\n  return <Router basename={basename} history={history} routes={routes} />\r\n}\r\n","import { useContext } from 'react'\r\n\r\nimport { NavigationContext } from '../context/NavigationContext'\r\n\r\nexport const useNavigation = () => {\r\n  return useContext(NavigationContext)\r\n}\r\n","import { MouseEvent } from 'react'\r\n\r\nexport const isModifiedEvent = (event: MouseEvent) => {\r\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\r\n}\r\n","import { ProHistory } from '../core/history'\r\nimport { error } from '../utils/diagnosis'\r\n\r\nimport { isTabRoute } from './route'\r\n\r\nexport type NavigateForwardOptions = {\r\n  type: 'navigateTo' | 'switchTab' | 'redirectTo' | 'reLaunch'\r\n  name?: string\r\n  url?: string\r\n}\r\n\r\nexport type NavigateBackOptions = {\r\n  type: 'navigateBack'\r\n  delta?: number\r\n}\r\n\r\nexport type NavigateOptions = {\r\n  navigator: ProHistory\r\n} & (NavigateForwardOptions | NavigateBackOptions)\r\n\r\nexport const navigate = async (options: NavigateOptions) => {\r\n  return new Promise<void>((resolve, reject) => {\r\n    const { navigator, type } = options\r\n\r\n    const unListen = navigator.listen(() => {\r\n      resolve()\r\n      unListen()\r\n    })\r\n\r\n    try {\r\n      if (type === 'navigateBack') {\r\n        const { delta } = options\r\n\r\n        navigator.back(delta)\r\n      } else {\r\n        const { name, url } = options\r\n        const to = name ? { name } : url\r\n\r\n        if (!to) {\r\n          return\r\n        }\r\n\r\n        if (type === 'navigateTo' || type === 'switchTab') {\r\n          navigator.push(to, ({ route }) => {\r\n            if (type === 'navigateTo' && isTabRoute(route)) {\r\n              error(\r\n                true,\r\n                `Use \\`switchTo\\` instead of \\`navigateTo\\` to switch the tabbar page：${route.path}`\r\n              )\r\n\r\n              return false\r\n            }\r\n          })\r\n        } else if (type === 'redirectTo') {\r\n          navigator.replace(to)\r\n        } else if (type === 'reLaunch') {\r\n          navigator.reset()\r\n          navigator.push(to)\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      reject(`${type}:fail ${error.message || error}`)\r\n    }\r\n  })\r\n}\r\n","import { CSSProperties, MouseEvent, MouseEventHandler, ReactNode } from 'react'\r\n\r\nimport { useNavigation } from '../hooks/useNavigation'\r\nimport { isModifiedEvent } from '../utils/event'\r\n\r\nimport { navigate } from './navigate'\r\n\r\ntype ComponentProps = {\r\n  className?: string\r\n  style?: CSSProperties\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n  onClick?: (event: MouseEvent) => boolean | void\r\n}\r\n\r\nexport type NavigateForwardProps = {\r\n  type?: 'navigateTo' | 'switchTab' | 'redirectTo'\r\n  name?: string\r\n  url?: string\r\n}\r\n\r\nexport type NavigateBackProps = {\r\n  type: 'navigateBack'\r\n  delta?: number\r\n}\r\n\r\nexport type NavigatorProps = ComponentProps &\r\n  (NavigateForwardProps | NavigateBackProps)\r\n\r\nexport const Navigator = ({\r\n  className,\r\n  style,\r\n  children,\r\n  title = children,\r\n  onClick,\r\n  ...navigateOptions\r\n}: NavigatorProps) => {\r\n  const { navigator } = useNavigation()\r\n\r\n  let href: string | undefined\r\n\r\n  if (navigateOptions.type !== 'navigateBack') {\r\n    const { name, url } = navigateOptions\r\n    const to = name ? { name } : url\r\n\r\n    if (to) {\r\n      href = navigator.createHref(to)\r\n    }\r\n  }\r\n\r\n  const handleNavigate = (event: MouseEvent) => {\r\n    const keepGoing = onClick?.(event)\r\n\r\n    if (keepGoing === false) {\r\n      event.preventDefault()\r\n      return\r\n    }\r\n\r\n    if (event.button === 0 && !isModifiedEvent(event)) {\r\n      event.preventDefault()\r\n      navigate({\r\n        navigator,\r\n        type: 'navigateTo',\r\n        ...navigateOptions\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <a\r\n      className={className}\r\n      // href={href}\r\n      style={style}\r\n      target='_self'\r\n      onClick={handleNavigate}\r\n    >\r\n      {title}\r\n    </a>\r\n  )\r\n}\r\n","import { useRef } from 'react'\r\n\r\nimport {\r\n  navigate,\r\n  NavigateBackOptions,\r\n  NavigateForwardOptions\r\n} from '../core/navigate'\r\n\r\nimport { useNavigation } from './useNavigation'\r\n\r\nexport type NavigateToParams = Pick<NavigateForwardOptions, 'name' | 'url'>\r\nexport type RedirectToParams = NavigateToParams\r\nexport type SwitchTabParams = NavigateToParams\r\nexport type NavigateBackParams = Pick<NavigateBackOptions, 'delta'>\r\n\r\nexport type RouterNavigator = {\r\n  navigateTo: (options: NavigateToParams) => Promise<void>\r\n  redirectTo: (options: RedirectToParams) => Promise<void>\r\n  switchTab: (options: SwitchTabParams) => Promise<void>\r\n  navigateBack: (options: NavigateBackParams) => Promise<void>\r\n}\r\n\r\nexport const useRouter = () => {\r\n  const ref = useRef<RouterNavigator>()\r\n  const { navigator } = useNavigation()\r\n\r\n  if (!ref.current) {\r\n    ref.current = {\r\n      navigateTo: (options: NavigateToParams) => {\r\n        return navigate({ navigator, type: 'navigateTo', ...options })\r\n      },\r\n\r\n      redirectTo: (options: RedirectToParams) => {\r\n        return navigate({ navigator, type: 'redirectTo', ...options })\r\n      },\r\n\r\n      switchTab: (options: SwitchTabParams) => {\r\n        return navigate({ navigator, type: 'switchTab', ...options })\r\n      },\r\n\r\n      navigateBack: (options: NavigateBackParams) => {\r\n        return navigate({ navigator, type: 'navigateBack', ...options })\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...(ref.current as RouterNavigator),\r\n    currentRoute: navigator.currentRoute,\r\n    getSnapshoot() {\r\n      return navigator.stackSnapshoot\r\n    }\r\n  }\r\n}\r\n","import { useContext } from 'react'\r\n\r\nimport { LocationContext } from '../context/LocationContext'\r\n\r\nexport const useLocation = () => {\r\n  return useContext(LocationContext)\r\n}\r\n"],"names":[],"mappings":"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"}